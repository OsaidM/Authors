{"version":3,"sources":["components/AuthorsTable.js","components/CreateAuthorForm.js","components/EditAuthorForm.js","App.js","reportWebVitals.js","index.js"],"names":["AuthorsTable","props","counter","setCounter","useState","authors","setAuthors","useEffect","axios","get","then","response","data","Authors","sort","a","b","name","catch","error","console","log","getAuthorId","author","_id","className","to","map","i","onClick","e","url","delete","count","style","marginLeft","CreateAuthorForm","setName","errors","setErrors","err","index","color","onSubmit","preventDefault","post","navigate","errorResponse","errorArr","Object","keys","key","push","message","onChange","target","value","type","EditAuthorForm","id","setAuthor","exists","setExists","Author","marginTop","put","placeholder","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c955931.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport axios from \"axios\"\nimport { Link, navigate } from \"@reach/router\"\n\nconst AuthorsTable = props => {\n    const {counter, setCounter } = props\n    const [authors, setAuthors] = useState([])\n\n    useEffect( () => {\n        axios.get(\"http://localhost:8000/api/authors\")\n            .then(response => setAuthors((response.data.Authors).sort((a,b) => (a.name > b.name) ? 1: -1)))\n            .catch(error => console.log(\"There was an issue: \", error))\n    }, [counter])\n\n    const getAuthorId = author => {\n        return `/${author._id}`\n    }\n\n    const deleteAuthor = url => {\n        axios.delete(\"http://localhost:8000/api/authors\" + url)\n            .then(response => console.log(\"Author was successfully deleted: \", response))\n            .then(()=> setCounter( {count: -1} ))\n            .catch(error => console.log(\"There was a problem: \", error))\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <p><Link to=\"/new\">Add an author</Link></p>\n                    <p>We have quotes by:</p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <table className=\"table table-hover table-striped table-bordered table-sm\">\n                        <thead className=\"thead-dark\">\n                        <tr>\n                            <th>Author</th>\n                            <th>Actions available</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            authors.map( (author, i) => (\n                                <tr key={i}>\n                                    <td>{author.name}</td>\n                                    <td>\n                                        <button className=\"btn btn-primary btn-sm\"><Link to={ getAuthorId(author) }>Edit</Link></button>\n                                        <button onClick={ (e)=>{deleteAuthor(getAuthorId(author))} } className=\"btn btn-warning btn-sm\" style={{marginLeft: \"10px\"}}>Delete</button>\n                                    </td>\n                                </tr>\n                            ))\n                        }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AuthorsTable","import React, { useState } from \"react\"\nimport axios from \"axios\"\nimport { navigate, Link } from \"@reach/router\"\n\nconst CreateAuthorForm = props => {\n\n    const [name, setName] = useState(\"\")\n    const [errors, setErrors] = useState([])\n\n    const onSubmit = e => {\n        e.preventDefault()\n        axios.post(\"http://localhost:8000/api/authors\", {\n            name: name,\n        })\n            .then(() => navigate(\"/\"))\n            .catch(err =>{\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n                const errorArr = []; // Define a temp error array to push the messages in\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n                    errorArr.push(errorResponse[key].message)\n                }\n                // Set Errors\n                setErrors(errorArr);\n            })\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <p><Link to=\"/\">Home</Link></p>\n                    <p>Add a new author:&nbsp;\n                        {\n                            errors.map((err, index) => <small key={index} style={{color:\"red\"}}>{err}</small>)\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <form onSubmit={ onSubmit }>\n                        <div className=\"form-group\">\n                            <label>Name:</label>\n                            <input onChange={(e)=>setName(e.target.value)} type=\"text\" className=\"form-control\"/>\n                        </div>\n                        <div className=\"form-group text-right\">\n                            <button onClick={()=>navigate(\"/\")} type=\"button\" className=\"btn btn-secondary btn-sm\">Cancel</button>\n                            <button className=\"btn btn-success btn-sm\" style={{marginLeft: \"10px\"}}>Submit</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default CreateAuthorForm\n","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { navigate, Link } from \"@reach/router\"\n\nconst EditAuthorForm = props => {\n\n    const { id } = props\n    const [author, setAuthor] = useState({})\n    const [exists, setExists] = useState(true)\n\n    useEffect( ()=> {\n        axios.get(`http://localhost:8000/api/authors/${id}`)\n            .then(response => setAuthor(response.data.Author[0]))\n            .catch(error => {\n                console.log(\"There was an issue, \", error)\n                setExists(false)\n            })\n    }, [])\n\n    console.log(\"hello\")\n\n\n    const [name, setName] = useState(\"\")\n    const [errors, setErrors] = useState([])\n\n    const onSubmit = e => {\n        e.preventDefault()\n        axios.put(`http://localhost:8000/api/authors/${id}`, {\n            name: name,\n        })\n            .then(() => navigate(\"/\"))\n            .catch(err =>{\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\n                const errorArr = []; // Define a temp error array to push the messages in\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\n                    errorArr.push(errorResponse[key].message)\n                }\n                // Set Errors\n                setErrors(errorArr);\n            })\n    }\n\n    if (exists === false){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-8 offset-2 text-center\" style={{marginTop: \"200px\"}}>\n                        <h3>Oops. That author doesn't exists.</h3>\n                        <p><Link to=\"/new\">Would you like to add this author?</Link></p>\n                    </div>\n                </div>\n            </div>)\n    }\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <p><Link to=\"/\">Home</Link></p>\n                    <p>Edit this author:&nbsp;\n                        {\n                            errors.map((err, index) => <small key={index} style={{color:\"red\"}}>{err}</small>)\n                        }\n                    </p>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <form onSubmit={ onSubmit }>\n                        <div className=\"form-group\">\n                            <label>Name:</label>\n                            <input onChange={(e)=>setName(e.target.value)} type=\"text\" placeholder={author.name} className=\"form-control\"/>\n                        </div>\n                        <div className=\"form-group text-right\">\n                            <button onClick={()=>navigate(\"/\")} type=\"button\" className=\"btn btn-secondary btn-sm\">Cancel</button>\n                            <button className=\"btn btn-success btn-sm\" style={{marginLeft: \"10px\"}}>Submit</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default EditAuthorForm","import './App.css';\nimport {Router} from \"@reach/router\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport AuthorsTable from \"./components/AuthorsTable\"\nimport CreateAuthorForm from \"./components/CreateAuthorForm\"\nimport EditAuthorForm from \"./components/EditAuthorForm\"\n\nfunction App() {\n\n  const [counter, setCounter] = useState({count: 0})\n\n  return (\n      <div className=\"App\">\n        <Router>\n          <AuthorsTable counter={counter} setCounter={setCounter} path=\"/\"/>\n          <CreateAuthorForm setCounter={setCounter} path=\"/new\"/>\n          <EditAuthorForm path=\"/:id\"/>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}